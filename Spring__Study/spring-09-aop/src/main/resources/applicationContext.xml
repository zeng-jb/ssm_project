<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">

<!--注册bean-->
    <bean id="userService" class="com.zeng.service.UserServiceImpl"/>
    <bean id="log" class="com.zeng.log.Log"/>
    <bean id="afterLog" class="com.zeng.log.AfterLog"/>

<!--&lt;!&ndash;    使用方式一：原生的spring API接口&ndash;&gt;-->
<!--&lt;!&ndash;    配置aop，需要导入aop的约束&ndash;&gt;-->
<!--    <aop:config>-->
<!--&lt;!&ndash;       切入点，expression；表达式   expression：要执行的位置（！* *  * * ）&ndash;&gt;-->
<!--        <aop:pointcut id="pointcut" expression="execution(* com.zeng.service.UserServiceImpl.*(..))"/>-->
<!--&lt;!&ndash;        执行环绕增加&ndash;&gt;-->
<!--        <aop:advisor advice-ref="log" pointcut-ref="pointcut"/>-->
<!--        <aop:advisor advice-ref="afterLog" pointcut-ref="pointcut"/>-->
<!--    </aop:config>-->


<!--&lt;!&ndash;        方式二，自定义类&ndash;&gt;-->
<!--    <bean id="diy" class="com.zeng.diy.DiyPointCut"/>-->
<!--    <aop:config>-->
<!--&lt;!&ndash;            自定义切入面，ref 要引用的类&ndash;&gt;-->
<!--        <aop:aspect ref="diy">-->
<!--&lt;!&ndash;            切入点&ndash;&gt;-->
<!--            <aop:pointcut id="point" expression="execution(* com.zeng.service.UserServiceImpl.*(..))"/>-->
<!--&lt;!&ndash;            通知&ndash;&gt;-->
<!--            <aop:before method="before" pointcut-ref="point"/>-->
<!--            <aop:after method="after" pointcut-ref="point"/>-->
<!--        </aop:aspect>-->
<!--    </aop:config>-->

<!--    方式三 ，使用注解-->
    <bean class="com.zeng.diy.AnnotationPointCut" id="annotationPointCut"/>
<!--    使用注解开启支持-->
    <aop:aspectj-autoproxy/>

</beans>
