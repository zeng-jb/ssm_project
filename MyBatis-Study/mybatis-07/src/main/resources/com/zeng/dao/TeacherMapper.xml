<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.zeng.dao.TeacherMapper">

    <select id="getTeacher" resultType="Teacher">
        select * from teacher;
    </select>

    <!--按照结果嵌套查询-->
    <select id="getTeacher2" resultMap="TeacherStudent">
        select  t.id tid , t.name tname, s.id sid,  s.name sname
        from teacher t,student s
        where t.id = s.tid and t.id = #{tid}
    </select>

    <resultMap id="TeacherStudent" type="Teacher">
        <result property="id" column="tid"/>
        <result property="name" column="tname"/>
    <!--    复杂的属性，需要单独处理 对象：association  集合：collection
        javaType :指定的属性类型
        集合中的泛型信息，需要用ofType处理
    -->
        <collection property="students" ofType="Student">
            <result property="id" column="sid"/>
            <result property="name" column="sname"/>
            <result property="tid" column="tid"/>
        </collection>

    </resultMap>

<!--  对象：association  多对一
 集合：collection  一对多
  javaType ： 用来指定实体类中属性的类型
  ofType ： 用来映射到List或集合中的pojo类型，泛型中的约束类型
  -->

<!--    ——————————————————-按照查询嵌套查询-->
    <select id="getTeacher3" resultMap="TeacherStudent2">
        select * from teacher where id = #{tid}
    </select>
    <resultMap id="TeacherStudent2" type="Teacher">
        <result property="id" column="id"/>
        <result property="name" column="name"/>
    <!--    上面两条可以省去-->
        <collection property="students" javaType="ArrayList" ofType="Student" select="getStudentByTeacherID" column="id"/>
    </resultMap>
    <select id="getStudentByTeacherID" resultType="Student">
        select * from student where tid = #{tid}
    </select>
</mapper>